version: '3.8'

services:
  app:
    build: .
    container_name: marketplace-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/${POSTGRES_DB}
#      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
#      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

      # - SPRING_DATA_REDIS_HOST=redis-cache
      # - SPRING_DATA_REDIS_PORT=6379
    depends_on:
      postgres-db:
        condition: service_healthy
      # redis-cache:
      #   condition: service_healthy

#  postgres-db:
#    image: postgres:16-alpine
#    container_name: postgres-db
#    environment:
#      - POSTGRES_DB=${POSTGRES_DB}
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#    volumes:
#      - postgres-data:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  # 3. Сервис кэша Redis
  # redis-cache:
  #   image: redis:7-alpine
  #   container_name: redis-cache
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

#volumes:
#  postgres-data: